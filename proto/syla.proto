syntax = "proto3";

package syla.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

// Syla Gateway Service - Code execution platform API
service SylaGateway {
  // Execution Management
  rpc CreateExecution(CreateExecutionRequest) returns (CreateExecutionResponse) {
    option (google.api.http) = {
      post: "/v1/executions"
      body: "*"
    };
  }
  
  rpc GetExecution(GetExecutionRequest) returns (GetExecutionResponse) {
    option (google.api.http) = {
      get: "/v1/executions/{id}"
    };
  }
  
  rpc ListExecutions(ListExecutionsRequest) returns (ListExecutionsResponse) {
    option (google.api.http) = {
      get: "/v1/executions"
    };
  }
  
  rpc CancelExecution(CancelExecutionRequest) returns (CancelExecutionResponse) {
    option (google.api.http) = {
      post: "/v1/executions/{id}/cancel"
      body: "*"
    };
  }
  
  rpc StreamExecution(StreamExecutionRequest) returns (stream StreamExecutionResponse) {
    option (google.api.http) = {
      get: "/v1/executions/{id}/stream"
    };
  }
  
  // Workspace Management
  rpc CreateWorkspace(CreateWorkspaceRequest) returns (CreateWorkspaceResponse) {
    option (google.api.http) = {
      post: "/v1/workspaces"
      body: "*"
    };
  }
  
  rpc GetWorkspace(GetWorkspaceRequest) returns (GetWorkspaceResponse) {
    option (google.api.http) = {
      get: "/v1/workspaces/{id}"
    };
  }
  
  rpc ListWorkspaces(ListWorkspacesRequest) returns (ListWorkspacesResponse) {
    option (google.api.http) = {
      get: "/v1/workspaces"
    };
  }
  
  rpc UpdateWorkspace(UpdateWorkspaceRequest) returns (UpdateWorkspaceResponse) {
    option (google.api.http) = {
      patch: "/v1/workspaces/{id}"
      body: "*"
    };
  }
  
  rpc DeleteWorkspace(DeleteWorkspaceRequest) returns (DeleteWorkspaceResponse) {
    option (google.api.http) = {
      delete: "/v1/workspaces/{id}"
    };
  }
  
  // Health Check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {
    option (google.api.http) = {
      get: "/v1/health"
    };
  }
  
  // Metrics
  rpc GetMetrics(GetMetricsRequest) returns (GetMetricsResponse) {
    option (google.api.http) = {
      get: "/v1/metrics"
    };
  }
}

// Common enums
enum ExecutionStatus {
  EXECUTION_STATUS_UNSPECIFIED = 0;
  EXECUTION_STATUS_PENDING = 1;
  EXECUTION_STATUS_QUEUED = 2;
  EXECUTION_STATUS_RUNNING = 3;
  EXECUTION_STATUS_COMPLETED = 4;
  EXECUTION_STATUS_FAILED = 5;
  EXECUTION_STATUS_CANCELLED = 6;
  EXECUTION_STATUS_TIMEOUT = 7;
}

enum Language {
  LANGUAGE_UNSPECIFIED = 0;
  LANGUAGE_PYTHON = 1;
  LANGUAGE_JAVASCRIPT = 2;
  LANGUAGE_TYPESCRIPT = 3;
  LANGUAGE_RUST = 4;
  LANGUAGE_GO = 5;
  LANGUAGE_JAVA = 6;
  LANGUAGE_CPP = 7;
  LANGUAGE_CSHARP = 8;
  LANGUAGE_RUBY = 9;
  LANGUAGE_PHP = 10;
}

enum WorkspaceType {
  WORKSPACE_TYPE_UNSPECIFIED = 0;
  WORKSPACE_TYPE_EPHEMERAL = 1;
  WORKSPACE_TYPE_SESSION = 2;
  WORKSPACE_TYPE_PERSISTENT = 3;
  WORKSPACE_TYPE_COLLABORATIVE = 4;
}

enum WorkspaceStatus {
  WORKSPACE_STATUS_UNSPECIFIED = 0;
  WORKSPACE_STATUS_PENDING = 1;
  WORKSPACE_STATUS_ACTIVE = 2;
  WORKSPACE_STATUS_SUSPENDED = 3;
  WORKSPACE_STATUS_TERMINATED = 4;
  WORKSPACE_STATUS_ERROR = 5;
}

// Core data types
message Execution {
  string id = 1;
  string user_id = 2;
  string workspace_id = 3;
  ExecutionStatus status = 4;
  Language language = 5;
  string code = 6;
  repeated string args = 7;
  ExecutionResult result = 8;
  ResourceUsage resource_usage = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp started_at = 11;
  google.protobuf.Timestamp completed_at = 12;
  map<string, string> metadata = 13;
}

message ExecutionResult {
  int32 exit_code = 1;
  string stdout = 2;
  string stderr = 3;
  google.protobuf.Duration execution_time = 4;
  repeated string files_created = 5;
  map<string, string> outputs = 6;
  ExecutionError error = 7;
}

message ExecutionError {
  string code = 1;
  string message = 2;
  string details = 3;
  string stack_trace = 4;
}

message ResourceUsage {
  uint64 memory_peak_mb = 1;
  uint64 cpu_time_ms = 2;
  uint64 disk_io_bytes = 3;
  uint64 network_io_bytes = 4;
  google.protobuf.Duration wall_time = 5;
}

message Workspace {
  string id = 1;
  string user_id = 2;
  string name = 3;
  string description = 4;
  WorkspaceType type = 5;
  WorkspaceStatus status = 6;
  WorkspaceConfig config = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  google.protobuf.Timestamp expires_at = 10;
  map<string, string> metadata = 11;
}

message WorkspaceConfig {
  repeated Language languages = 1;
  ResourceLimits limits = 2;
  repeated string allowed_packages = 3;
  map<string, string> environment = 4;
  SecurityConfig security = 5;
}

message ResourceLimits {
  uint64 memory_mb = 1;
  uint32 cpu_cores = 2;
  uint64 disk_mb = 3;
  google.protobuf.Duration max_execution_time = 4;
  uint32 max_processes = 5;
  uint64 max_file_size_mb = 6;
}

message SecurityConfig {
  bool allow_network = 1;
  bool allow_file_writes = 2;
  repeated string allowed_commands = 3;
  repeated string blocked_commands = 4;
  bool enable_sandbox = 5;
}

// Request/Response messages
message CreateExecutionRequest {
  string code = 1;
  Language language = 2;
  repeated string args = 3;
  string workspace_id = 4;
  google.protobuf.Duration timeout = 5;
  map<string, string> environment = 6;
  map<string, string> metadata = 7;
}

message CreateExecutionResponse {
  Execution execution = 1;
}

message GetExecutionRequest {
  string id = 1;
}

message GetExecutionResponse {
  Execution execution = 1;
}

message ListExecutionsRequest {
  string workspace_id = 1;
  ExecutionStatus status = 2;
  uint32 page_size = 3;
  string page_token = 4;
}

message ListExecutionsResponse {
  repeated Execution executions = 1;
  string next_page_token = 2;
  uint32 total_count = 3;
}

message CancelExecutionRequest {
  string id = 1;
  bool force = 2;
}

message CancelExecutionResponse {
  Execution execution = 1;
}

message StreamExecutionRequest {
  string id = 1;
}

message StreamExecutionResponse {
  oneof event {
    ExecutionStatusUpdate status_update = 1;
    ExecutionOutput output = 2;
    ExecutionMetrics metrics = 3;
  }
}

message ExecutionStatusUpdate {
  ExecutionStatus status = 1;
  string message = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message ExecutionOutput {
  string stream = 1; // "stdout" or "stderr"
  string data = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message ExecutionMetrics {
  ResourceUsage usage = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message CreateWorkspaceRequest {
  string name = 1;
  string description = 2;
  WorkspaceType type = 3;
  WorkspaceConfig config = 4;
  google.protobuf.Duration ttl = 5;
  map<string, string> metadata = 6;
}

message CreateWorkspaceResponse {
  Workspace workspace = 1;
}

message GetWorkspaceRequest {
  string id = 1;
}

message GetWorkspaceResponse {
  Workspace workspace = 1;
}

message ListWorkspacesRequest {
  WorkspaceType type = 1;
  WorkspaceStatus status = 2;
  uint32 page_size = 3;
  string page_token = 4;
}

message ListWorkspacesResponse {
  repeated Workspace workspaces = 1;
  string next_page_token = 2;
  uint32 total_count = 3;
}

message UpdateWorkspaceRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  WorkspaceConfig config = 4;
  map<string, string> metadata = 5;
}

message UpdateWorkspaceResponse {
  Workspace workspace = 1;
}

message DeleteWorkspaceRequest {
  string id = 1;
  bool force = 2;
}

message DeleteWorkspaceResponse {
  bool success = 1;
}

message HealthCheckRequest {}

message HealthCheckResponse {
  enum HealthStatus {
    HEALTH_STATUS_UNSPECIFIED = 0;
    HEALTH_STATUS_HEALTHY = 1;
    HEALTH_STATUS_DEGRADED = 2;
    HEALTH_STATUS_UNHEALTHY = 3;
  }
  
  HealthStatus status = 1;
  map<string, ComponentHealth> components = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message ComponentHealth {
  bool healthy = 1;
  string message = 2;
  map<string, string> details = 3;
}

message GetMetricsRequest {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  repeated string metrics = 3;
}

message GetMetricsResponse {
  map<string, MetricSeries> metrics = 1;
}

message MetricSeries {
  repeated MetricPoint points = 1;
}

message MetricPoint {
  google.protobuf.Timestamp timestamp = 1;
  double value = 2;
  map<string, string> labels = 3;
}